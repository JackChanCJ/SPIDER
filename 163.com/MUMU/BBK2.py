# coding=utf-8
__author__ = 'JACK_CHAN'
import os
import re
import urllib.parse
import urllib.request
import urllib.response
from html.parser import HTMLParser

"""
483
BBK1中获取到的list文章链接后的动态部分，从1中
'1346123102010230349995', '1    34612310201021473024840', '13461231020162153750135', '134612310201612375310693', '1346123102016123729456', '13461231020157139295269', '134612310201568978931', '134612310201523184529932', '1346123102015299949579', '1346123102015034364884', '13461231020141129112934749', '134612310201491301227980', '13461231020148903853143', '1346123102014522105753461', '13461231020131079273389', '13461231020137494331815', '1346123102013623101753819', '1346123102013614101925166', '134612310201352923542127', '134612310201351924140989',
'134612310201351085446371', '134612310201359104757346', '134612310201354101828436', '13461231020134187933127', '134612310201341310495476', '1346123102013412105656207', '13461231020134765754774', '1346123102013311101412910', '13461231020133681617652', '1346123102013212111915220', '13461231020130301531431', '13461231020130210458911', '134612310201302101658321', '1346123102013014101717481', '134612310201301110168646', '1346123102012112491516213', '134612310201210113424152', '1346123102012101115756474', '134612310201293110571953', '1346123102012929104741425', '134612310201292105859486', '13461231020129495818575', '13461231020128240501924', '1346123102012823112845849', '134612310201288104712778', '1346123102012863947421', '1346123102012840242255', '1346123102012730105212547',
'134612310201272155934112', '1346123102012715115759805', '134612310201271481941306', '134612310201276101545186', '1346123102012759753233', '134612310201274114442329', '13461231020127111237470', '134612310201263185839374', '134612310201262853630781', '134612310201261711517558', '134612310201252110338748', '1346123102012514105750941', '134612310201251401516368', '134612310201251011013313', '13461231020125594248191', '1346123102012429114521347', '134612310201242910329578', '1346123102012424101716812', '1346123102012414102146505', '13461231020124974814125',
 '13461231020124501019908', '13461231020124311741605', '134612310201232683112453', '134612310201231525128706', '134612310201231425713345', '13461231020123108421183', '13461231020123810521138', '134612310201221994513555', '13461231020122710377374', '134612310201225111042895', '13461231020122410574738', '134612310201222105336808', '1346123102012210623445', '13461231020121280253747', '1346123102012125111651609', '134612310201212402156806', '134612310201212344715875', '134612310201211784710404', '13461231020121131122376', '1346123102012110112710934',
  '1346123102012190330869', '134612310201218114258745', '1346123102012181357717', '13461231020120291551217', '13461231020120403033765', '134612310201111300811352', '1346123102011919111055350', '1346123102011830112559709', '134612310201183071731866', '134612310201182814234745', '134612310201182482524304', '13461231020118230411549', '134612310201181863149139', '134612310201181702928598', '134612310201181565747842', '134612310201181274459145', '134612310201181110926530', '134612310201181135937760', '1346123102011888216334', '13461231020118762756398', '13461231020118333423289', '13461231020118112046457', '134612310201173085521874', '13461231020117289152985',
  '134612310201172611736492', '13461231020117169330707', '134612310201171511121301', '134612310201171410928427', '13461231020117149027189', '134612310201171493215725', '13461231020117142930112', '134612310201171353627551', '13461231020117102918239', '13461231020117100464940', '1346123102011792302641', '13461231020117894245103', '134612310201177111936120', '13461231020117711142994', '134612310201172111911951', '13461231020117192438700', '13461231020116291019774', '13461231020116287455369', '13461231020116286323332', '134612310201162521411862', '134612310201162511556525', '134612310201162311639790', '1346123102011623959668', '134612310201161923538987', '13461231020116122627179', '134612310201161125453405', '13461231020116911913683', '13461231020116964844478', '13461231020116772139122', '1346123102011673355830', '1346123102011662629534', '134612310201164113132283',
  '134612310201164113659802', '1346123102011624529133', '134612310201152810119678', '134612310201152861716807', '13461231020115246858544', '134612310201152042139641', '13461231020115203344659', '13461231020115120347642', '13461231020115610852607', '13461231020115594325514', '134612310201143022412237', '134612310201142424751785', '134612310201141151057376', '13461231020114103193551', '134612310201141003447141', '134612310201147115942269', '134612310201143113343767', '13461231020114394937969', '134612310201142103245394', '13461231020114111059356', '134612310201133072114688', '134612310201132964244225', '134612310201121613654610', '1346123102011215112250120', '1346123102011212111219115', '134612310201121232352889', '134612310201121211910151', '1346123102011279138530', '134612310201126249820', '13461231020112605049584', '1346123102011260228771', '13461231020112211178548',
  '13461231020112163513658', '1346123102011128103329116', '13461231020111270521526', '134612310201112652418921', '1346123102011124111928808', '1346123102011124102238523', '13461231020111249397613', '13461231020111240301272', '1346123102011121115842885', '134612310201111992352845', '1346123102011118112751158', '1346123102011118103723203', '13461231020111144391357', '134612310201111441932586', '13461231020111125747252', '134612310201111121055601', '134612310201102821340317', '13461231020110277542876', '134612310201102342524692', '13461231020110710366506', '13461231020110795623836', '13461231020110677321', '1346123102010113171245553', '134612310201011266257398',
  '13461231020101125105718127', '1346123102010112391630897', '13461231020101122105952653', '1346123102010112003120661', '1346123102010111810501087', '1346123102010111702313462', '134612310201011162817203', '1346123102010111585155910', '1346123102010111394956245', '1346123102010111394422933', '1346123102010111273750439', '13461231020101111101259803', '1346123102010111002235381', '1346123102010119103247358', '1346123102010118105145924', '1346123102010118102534293', '1346123102010116105352584', '134612310201011500829', '13461231020101140136880', '134612310201011310519263', '134612310201011292742251', '13461231020101129737309', '13461231020101026115159405', '1346123102010102614115514', '1346123102010102464837943', '1346123102010102310953708', '134612310201010239368719', '134612310201010220012821', '1346123102010102153443647', '1346123102010101213946998', '134612310201010121294180', '1346123102010101011453425', '134612310201010934814394', '13461231020101079341997', '13461231020109229475386', '134612310201091155041331', '13461231020109864441216', '13461231020109182817883', '13461231020109181529671', '1346123102010915293728',
  '13461231020109102459795', '13461231020109101321780', '13461231020108216536248', '134612310201082102224838', '1346123102010821076675', '134612310201081895218543', '134612310201081831128684', '134612310201081211134751', '1346123102010810114545162', '134612310201089103953347', '1346123102010890545511', '13461231020108792730481', '13461231020108613810530', '1346123102010853744211', '13461231020108510166437', '13461231020108375911592', '13461231020108274144248', '13461231020108185323948', '134612310201073105616495', '134612310201073083235990', '13461231020107308536373', '13461231020107300052909', '134612310201072942624701', '134612310201072910122849', '134612310201072354052779', '1346123102010723522368', '134612310201072334918292', '134612310201071743048201', '134612310201071722139349', '134612310201071645139833', '13461231020107162582801', '134612310201071574517959', '134612310201071484407', '13461231020107107528308', '134612310201071010394907', '13461231020107964145309', '13461231020107952529373', '13461231020107901530890', '134612310201076682444', '13461231020107610153489', '13461231020107585743121', '13461231020107591943384', '134612310201074224237', '13461231020107381758348',
  '13461231020107273451903', '1346123102010727313562', '13461231020107174813575', '1346123102010631101834209', '134612310201063161215193', '134612310201063075936123', '134612310201062932546989', '134612310201062884227307', '134612310201062782318533', '134612310201061733419414', '134612310201061711207296', '1346123102010617111425117', '13461231020106148540624', '134612310201061225034627', '13461231020106102349684', '1346123102010661313877', '13461231020106105956273', '134612310201052835510143', '134612310201052562754716', '1346123102010523115256414', '134612310201052302630309', '134612310201052274317748', '13461231020105216363798', '134612310201052142646877', '134612310201052141250334', '13461231020105218367130', '134612310201052183144661', '1346123102010520102631440', '1346123102010520102619874', '13461231020105192283483', '134612310201051885844797', '13461231020105166398309', '134612310201051632136566', '13461231020105163749136', '13461231020105141269101', '1346123102010513103727136', '13461231020105121839889', '134612310201059493460', '1346123102010574213930', '1346123102010553344349',
  '13461231020105574249516', '13461231020105495625254', '134612310201053111617818', '1346123102010429101237619', '134612310201042905514313', '134612310201042822553864', '134612310201042511714492', '13461231020104235025901', '1346123102010420112729968', '134612310201042041943279', '13461231020104193331209', '1346123102010418105027599', '1346123102010418103449711', '134612310201041875038510', '1346123102010417105045389', '134612310201041663753773', '134612310201041515740809', '134612310201041481249684', '134612310201041272557310', '13461231020104117353990', '134612310201041044429453', '134612310201041012420816', '13461231020104811573424', '134612310201048102440678', '13461231020104810551846', '13461231020104712850410', '134612310201047113542596', '1346123102010468405210', '1346123102010468263748', '13461231020104512351391', '134612310201042104918667', '1346123102010330102238758', '1346123102010329111420998', '134612310201032955336520', '1346123102010328250884', '134612310201032410944316', '134612310201032494640841', '134612310201032455145479', '1346123102010323112325668', '1346123102010323024959', '1346123102010322103528609', '134612310201032105926529', '1346123102010319115323884', '1346123102010319111343565', '134612310201031901941586', '1346123102010318516180', '13461231020103175927597', '1346123102010317053348',
  '134612310201031691246383', '134612310201031655355142', '13461231020103157133648', '134612310201031421320346', '1346123102010313102113124', '13461231020103131112928', '1346123102010311114532490', '134612310201031104758810', '134612310201039114357350', '1346123102010390163327', '13461231020103773218437', '1346123102010372465494', '13461231020103563541199', '13461231020103403311211', '13461231020103292428937', '1346123102010327320814', '1346123102010311146310', '13461231020102300569483', '134612310201022955959943', '134612310201022994736196', '134612310201022872617229', '13461231020102261138462', '13461231020102261919349', '1346123102010225101518667', '134612310201022502321539', '1346123102010222869805', '134612310201022104845356', '1346123102010219115359393', '134612310201021894330999', '13461231020102173322625', '134612310201021205827195', '1346123102010211111543308', '13461231020102891550236', '134612310201012883749324', '13461231020101250129190', '1346123102010121105447486', '134612310201011732357499', '134612310201011723742422', '13461231020101110483282', '134612310201018103911634', '13461231020101722351286', '13461231020101604219655', '13461231020101403756915', '134612310201013105853721', '13461231020101293559922', '134612310201003131350146', '1346123102010031389331', '13461231020100313239787',
  '134612310201003125713943', '134612310201003124535160', '134612310201003111368465', '13461231020100281424326', '134612310201002605631583', '134612310201002093532775', '13461231020100170303372', '134612310201001071046222', '1346123102010080423119', '13461231020100694648439', '13461231020100615319985', '13461231020100534827502', '1346123102010039932385', '13461231020100303613224', '13461231020100285021222', '134612310200911315213615', '134612310200911315174135', '1346123102009113115352643', '1346123102009113115224333', '1346123102009113111236843', '134612310200911311737968', '1346123102009113105228564', '1346123102009113104226391', '1346123102009113102647365', '1346123102009113102411546', '1346123102009113101656374', '1346123102009113101119102', '1346123102009113011564689', '13461231020091130104736804', '134612310200911308108973', '1346123102009112992148513', '1346123102009112792650128', '1346123102009112774910614', '134612310200911265451730', '1346123102009112593341220', '1346123102009112572289',
  '13461231020091125167367', '1346123102009112401011689', '134612310200911240754897', '13461231020091123115151595', '13461231020091123113024788', '13461231020091123112143539', '134612310200911234335476', '1346123102009112154620789', '1346123102009112105514671', '13461231020091120115655261', '13461231020091120115039937', '13461231020091120113710332', '134612310200911207376310', '1346123102009112012120178', '1346123102009111822335829', '1346123102009111710194638', '134612310200911174382223', '1346123102009111715857956', '134612310200911170517294', '134612310200911163055650', '1346123102009111611454430', '134612310200911162240112', '134612310200911160344158', '13461231020091115115211977', '13461231020091115102541549', '1346123102009111310128935', '1346123102009111395921511'

"""

def mkdir(path):
    # 引入模块
    import os

    # 去除首位空格
    path=path.strip()
    # 去除尾部 \ 符号
    path=path.rstrip("\\")

    # 判断路径是否存在
    # 存在     True
    # 不存在   False
    isExists=os.path.exists(path)

    # 判断结果
    if not isExists:
        # 如果不存在则创建目录
        # 创建目录操作函数
        os.makedirs(path)

        print (path+' 创建成功')
        return True
    else:
        # 如果目录存在则不创建，并提示目录已存在
        print (path+' 目录已存在')
        return False

username = 'yyyyy330'
userID = '134612310'
list = ['13461231020107381758348']
urllist = []
html_parse = HTMLParser()
faillist = []

for i in list:
    url = 'http://' + username + '.blog.163.com/blog/static/' + i
    print (i)
    # 模拟请求的hearders信息，因为cookies太长故意缺少
    header_dict = {
        'Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
        # 'Accept-Encoding':'gzip, deflate, sdch',
        'Accept-Language':'zh-CN,zh;q=0.8',
        'Cache-Control':'max-age=0',
        'Connection':'keep-alive',
        'Host':'yyyyy330.blog.163.com',
        'Upgrade-Insecure-Requests':'1',
        'Referer':url,
        'User-Agent':'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36'
    }
    # 如果报错，记录报错的链接下次再继续跑
    try:
        post = urllib.request.Request(url, headers= header_dict)
        req = urllib.request.urlopen(post)
        # 在读之前取状态码 200
        print (req.status)
        res = req.read().decode('gbk')
        # print (res)
        # 使用HTMLParser转换字符中的尖括号，得到txt
        html = html_parse.unescape(res)
        # print (html)
        # 服务器返回res，并对结果进行解码，查找相应的边界用非贪心模式爬取需要的内容
        # 此处不使用findall 是因为search在查找文本时，只要第一次找到文本后后面的文本都不查找了，提高查找效率
        # 此处一定要有re.S，换行匹配，关键点
        # 爬取博客完成时间  <span class="blogsep">2010-03-14 19:30:24</span><span class="blogsep">
        completetime = re.search('<span class="blogsep">(.*?)<\/span><span class="blogsep">', html, re.S).group(1)
        part = re.search('<form(.*)</form>', html, re.S).group(1)
        title = re.search('<input type="hidden" name="title" value="(.*?)" \/>', part, re.S).group(1)
        bodytext = re.search('<input type="hidden" name="content" value="(.*?)" \/>', part, re.S).group(1)
        # 处理爬取后的数据，首先去除HTML标签，再去除&nbsp;
        bodytext1 = re.sub('<[^>]+>', '', bodytext)
        bodytext2 = re.sub('&nbsp;', '', bodytext1)


        # 写文件
        mkpath = os.getcwd() + '\\博客文件\\'
        fn = os.getcwd() + '\\博客文件\\' + title + '.txt'
        mkdir(mkpath)
        f = open(fn, 'w+')
        url_txt = '文章链接:     ' + url + '\n'
        completetime_txt = '创建时间:     ' + completetime + '\n'
        title_txt = '文章标题：    ' + title + '\n'
        bodytext2_txt = '文章正文：    \n' + bodytext2 + '\n'
        f.writelines([url_txt, completetime_txt, title_txt, bodytext2_txt])
        f.close()
    except  Exception as e:
        faillist.append(i)
        f = open('faillist.txt', 'w+')
        fail_list = '失败的链接文章list集合：' + str(faillist)
        f.write(fail_list)
        f.close()
        pass
    # 每次请求成功后，再间隔5秒钟向服务器发请求








def main():
    pass


if __name__ == '__main__':
    main()